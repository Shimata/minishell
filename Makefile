# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jalvaro <jalvaro@student.21-school.ru>     +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2020/05/07 23:33:20 by wquinoa           #+#    #+#              #
#    Updated: 2020/07/17 22:54:27 by jalvaro          ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

#+----------------------------------------------------------------------------------------------------------------------+#
#|    Source files                                                                                                      |#
#+----------------------------------------------------------------------------------------------------------------------+#

SRCS :=			minishell.c	env.c env_paste.c parse_args.c parse_utils.c


#+----------------------------------------------------------------------------------------------------------------------+#
#|    Utilities                                                                                                         |#
#+----------------------------------------------------------------------------------------------------------------------+#

WHT = \033[0m#																#
GRN = \033[32m#																#
RED = \033[31m#																#
WHT1 = \033[0;1m#															#
GRN1 = \033[32;1m#															#
RED1 = \033[31;1m#															#
DRK = \033[2m#																#
MADE_MSG = \r   $(WHT1)Created $(GRN1)#										#
DEL_MSG = \n   $(WHT1)Removed $(DRK)$(RED1)#								#
ERROR_MSG = "\n   $(WHT1)$(DRK)Nothing to $@\n"#							#

#+----------------------------------------------------------------------------------------------------------------------+#
#|    Good stuff                                                                                                        |#
#+----------------------------------------------------------------------------------------------------------------------+#

NAME = minishell
BIN = ./obj
S_DIR = ./src
S_FILES = $(addprefix $(S_DIR)/, $(SRCS))

HEAD = $(NAME:a=h)
OBJ = $(SRCS:c=o)
BOBJ = $(B_FILES:c=o)
CC = gcc
CF = -Wall -Wextra -Werror
.PHONY: all libft bonus clean fclean re

#+----------------------------------------------------------------------------------------------------------------------+#
#|    Conditionals                                                                                                      |#
#+----------------------------------------------------------------------------------------------------------------------+#

#$(VERBOSE).SILENT:
#.ONESHELL:
ifdef WITH_BONUS
OBJ_FILES = $(addprefix $(BIN)/, $(OBJ)) $(addprefix $(BIN)/, $(BSRCS:c=o))
vpath %.c ./src
else
OBJ_FILES = $(addprefix $(BIN)/, $(OBJ))
vpath %.c ./src
endif

#+----------------------------------------------------------------------------------------------------------------------+#
#|    Rules                                                                                                             |#
#+----------------------------------------------------------------------------------------------------------------------+#

all: $(NAME)

bonus:
	@$(MAKE) 'WITH_BONUS = true' all

$(NAME): $(S_FILES) | libft
	@gcc $^ ./libft/libft.a -I ./include -o $(NAME)
	@echo "$(MADE_MSG)$(NAME)$(WHT)\n"
	@./$(NAME)
ifeq ($(WITH_BONUS),true)
	@echo "	$(WHT1)...added $(GRN1)ft_printf$(WHT)\n"
endif

libft:
	@$(MAKE) -C libft bonus

#+----------------------------------------------------------------------------------------------------------------------+#
#|    Trash removal rules                                                                                               |#
#+----------------------------------------------------------------------------------------------------------------------+#

clean:
	@$(MAKE) -C libft clean
	@if test -f $(NAME); \
	then rm -rf $(NAME); \
	echo "$(DEL_MSG)$(NAME)$(WHT)\n"; \
	else echo $(ERROR_MSG); \
	fi

fclean: clean
	@$(MAKE) -C libft fclean
	@if test -f $(NAME); \
	then rm -rfv ./$(NAME) $(REPLACE); \
	rm -rf a.out; \
	echo "$(DEL_MSG) lib$(WHT)\n"; \
	else echo $(ERROR_MSG); \
	fi

re: fclean all
